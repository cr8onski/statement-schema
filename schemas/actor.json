{

    "$schema": "http://json-schema.org/draft-04/schema#",
    "description": "Schema for an xAPI Actor Property",
    "id":"http://localhost:8080/actor-schema.json",

    "type": "object",

    "additionalProperties": false,

    "properties": {
        "actor": { "$ref": "#/definitions/actor" }
    },

    "definitions": {
        "actor": {
            "allOf": [
                { "$ref": "#/definitions/base-actor" }
            ],
            "oneOf": [
                { "$ref": "#/definitions/agent"},
                { "$ref": "#/definitions/group"}
            ]
        },
        "base-actor": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "agent": {
            "type": "object",
            "properties": {
                "objectType": {
                    "type": "string",
                    "pattern": "Agent"
                }
            },
            "allOf": [
                {"$ref":"#/definitions/ifi"}
            ],
            "oneOf": [
                { "required": ["mbox"] },
                { "required": ["mbox_sha1sum"] },
                { "required": ["openid"] },
                { "required": ["account"] }
            ]
        },
        "group": {
            "oneOf": [
                { "$ref": "#/definitions/id-group" },
                { "$ref": "#/definitions/anon-group" }
            ]
        },
        "id-group": {
            "type": "object",
            "properties": {
                "objectType": {
                    "type": "string",
                    "pattern": "Group"
                },
                "member": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/agent" }
                }
            },
            "allOf": [
                {"$ref":"#/definitions/ifi"}
            ],
            "required": [ "objectType" ],
            "oneOf": [
                { "required": ["mbox"] },
                { "required": ["mbox_sha1sum"] },
                { "required": ["openid"] },
                { "required": ["account"] }
            ]
        },
        "anon-group": {
            "type": "object",
            "properties": {
                "objectType": {
                    "type": "string",
                    "pattern": "Group"
                },
                "member": {
                    "type": "array",
                    "items": { "$ref": "#/definitions/agent" }
                }
            },
            "allOf": [
                {"$ref":"#/definitions/ifi"}
            ],
            "required": [ "objectType", "member" ]
        },
        "ifi": {
            "oneOf": [
                { "$ref": "#/definitions/mbox" },
                { "$ref": "#/definitions/mbox_sha1sum" },
                { "$ref": "#/definitions/openid" },
                { "$ref": "#/definitions/account" }
            ]
        },
        "mbox": {
            "properties": {
                "mbox": {
                    "type": "string",
                    "pattern": "mailto:\\S+@\\S+\\.\\S+"
                }
            },
            "required": ["mbox"]
        },
        "mbox_sha1sum": {
            "properties": {
                "mbox_sha1sum": {
                    "type": "string"
                }
            },
            "required": ["mbox_sha1sum"]
        },
        "openid": {
            "properties": {
                "openid": { "$ref": "#/definitions/iri" }
            },
            "required": ["openid"]
        },
        "account": {
            "properties": {
                "account": {
                    "type": "object",
                    "properties": {
                        "homePage": { "$ref": "#/definitions/iri" },
                        "name": {
                            "type": "string"
                        }
                    },
                    "required": [ "homePage", "name" ]
                }
            },
            "required": [ "account" ]
        },
        "iri": {
            "type": "string",
            "pattern": "^[\\S]+:\\/\\/?(?!\\/)[\\S]+$"
        },
    }

}
